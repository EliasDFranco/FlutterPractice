import 'package:flutter/material.dart';

class EjemploText extends StatelessWidget {
  const EjemploText({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        const Spacer(),
        const Text("Perfil de GitHub"),
        const Text(
          "Configuraci√≥n",
          style: TextStyle(fontSize: 24),
        ),
        const Text(
          "Hola",
          style: TextStyle(fontWeight: FontWeight.bold, fontSize: 30),
        ),
        const Text(
          "Que tal",
          style: TextStyle(fontStyle: FontStyle.italic),
        ),
        const Text("Goodfellas",
            style: TextStyle(
                color: Colors.orange,
                fontSize: 30,
                backgroundColor: Colors.red)),
        const Text(
          "Taxi Driver",
          style:
              TextStyle(decoration: TextDecoration.lineThrough, fontSize: 20),
        ),
        Text("Apocalypse Now",
            style: TextStyle(
                decoration: TextDecoration.underline,
                fontSize: 50,
                color: Colors.blue,
                decorationColor: Colors.blue)),
        Text(
          "Espacioado entre letras",
          style: TextStyle(letterSpacing: 5, fontSize: 30),
        ),
        Text(
          "Texto largo Texto largo Texto largo Texto largo Texto largo Texto largo",
          style: TextStyle(letterSpacing: 30, fontSize: 40),
          maxLines: 2,
        ),
        const Spacer(),
      ],
    );
  }
}

/*
+-------------------------------------------------+
|              Documentaci√≥n Text                  |
+-------------------------------------------------+

import 'package:flutter/material.dart';
  Esto importa el paquete material.dart, el cual contiene todos los componentes visuales de Material Design como botones, textos, columnas, contenedores, etc.

  Sin esto, no podr√≠as usar ni Text, ni Column, ni StatelessWidget.

class EjemploText extends StatelessWidget
  Est√°s creando un widget personalizado llamado EjemploText, que extiende de StatelessWidget.
  Esto significa que:

  El widget no guarda estado.

  Solo se construye una vez y no cambia.

üîç Teor√≠a:
Flutter tiene dos tipos de widgets principales:

Widget	Cambia en el tiempo	Ejemplo
StatelessWidget	‚ùå No cambia	Un bot√≥n sin interacci√≥n
StatefulWidget	‚úÖ Cambia	Un contador, un input

const EjemploText({super.key});
  Este es el constructor del widget.
  Se llama autom√°ticamente cuando Flutter crea este widget en la interfaz.
  La palabra const ayuda a optimizar el rendimiento, ya que dice "esto no cambia, as√≠ que no lo reconstruyas".

Widget build(BuildContext context)
  Este m√©todo construye la UI del widget. Flutter lo llama cada vez que necesita renderizarlo.

return Column(...)
  Aqu√≠ est√°s retornando un widget de tipo Column.

Column:
  Organiza widgets de arriba a abajo.
  √ötil para crear listas verticales de elementos.

  Es hijo directo del widget ra√≠z (en este caso ser√≠a dentro de alg√∫n Scaffold si estuviera en un proyecto real).

children: [ ... ]
  Dentro de Column, los hijos (children) son los widgets que se apilan verticalmente.
  Ahora veamos cada uno de ellos:

const Spacer(),
  El Spacer crea espacio flexible. Aqu√≠, agrega espacio arriba del contenido para que no quede pegado al borde superior.

Teor√≠a r√°pida:
  Spacer usa un Flex por dentro. Si tienes dos Spacer(), divide el espacio entre ellos.

const Text("Perfil de GitHub")
  Muestra texto plano, sin estilo.

const Text("Configuraci√≥n", style: TextStyle(fontSize: 24))
  Texto con tama√±o de fuente 24.

  TextStyle permite modificar c√≥mo se ve el texto.

const Text("Hola", style: TextStyle(fontWeight: FontWeight.bold, fontSize: 30))
  fontWeight: FontWeight.bold = hace que el texto sea negrita

  fontSize: 30 = tama√±o grande

const Text("Que tal", style: TextStyle(fontStyle: FontStyle.italic))
Texto en cursiva (italic).

const Text("Goodfellas", style: ...)
  Estilo combinado:

  color: Colors.orange ‚Üí color del texto

  fontSize: 30 ‚Üí tama√±o

  backgroundColor: Colors.red ‚Üí fondo del texto

  Se usa cuando quer√©s destacar un texto, por ejemplo, un t√≠tulo o una alerta.

const Text("Taxi Driver", style: TextStyle(decoration: TextDecoration.lineThrough, fontSize: 20))
  Aplica una l√≠nea que lo tacha (lineThrough)

  Tama√±o de 20

  Ideal para representar texto eliminado o no disponible.

Text("Apocalips Now", style: TextStyle(...))
  Subrayado (decoration: TextDecoration.underline)

  Azul (color: Colors.blue)

  Tama√±o gigante (fontSize: 50)

  Color de subrayado tambi√©n azul (decorationColor: Colors.blue)

Text("Espacioado entre letras", style: TextStyle(letterSpacing: 5, fontSize: 30))
  letterSpacing separa las letras horizontalmente.

  √ötil para t√≠tulos o textos decorativos.

Text("Texto largo Texto largo...", style: TextStyle(letterSpacing: 30, fontSize: 40), maxLines: 2)
  Espaciado gigante entre letras (30).

  Texto muy grande (fontSize: 40).

  maxLines: 2 = como m√°ximo se muestran 2 l√≠neas. Si hay m√°s, se corta con ....

Esto es clave para evitar que el texto desborde la pantalla.

const Spacer()
  Espacio abajo. As√≠ tu contenido queda centrado verticalmente si est√° dentro de algo m√°s grande.

*/
